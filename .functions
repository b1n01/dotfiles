#!/bin/sh
# Custom functions here

# Check if in a git directory
_is-git-directory () { 
	if [ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]; then
    	return 0
    else
		echo You are not in a git directory
        return 1
    fi
}

# Check if the are any parameters
_has-params () {
	if [ -n "$1" ]; then
    	return 0
    else
		echo Missing parameter/s
        return 1
    fi
}

#@doc list: List aliases and functions
list () {
    printf "Here your commands: ðŸ¤˜ðŸ¤˜ðŸ¤˜\n\n"
    grep -oh '^#@doc.\+' \
        ~/.dotfiles/.alias \
        ~/.dotfiles/.functions |      # match doc tags
        cut -c 7- |                   # remove the '#@doc ' part
        sort |                        # sort the result
        grep '^[^:]\+' --color=always # color the alias name

}

#@doc gg [branch]: "Smart" checkout a git branch by searchig it
gg () {
	_is-git-directory || return
	_has-params $@ || return

	# --format is to keep only branch name
	# --max-count is to keep only first match
	git checkout $(git branch --format='%(refname:short)' | grep $1 --max-count 1)
}

#@doc gpush-up: Git push current branch and set upstream
gpush-up () {
	_is-git-directory && git push --set-upstream origin $(git branch --show-current)
}

#@doc gu [email]: Set git user
gu () {
	_is-git-directory || return
	_has-params $@ || return
	
    git config user.name "Luca Lorenzini"
	git config user.email $1

    echo "User '$(git config user.name)' ($(git config user.email)) set on ${PWD}"
}
